# @package _global_

defaults:
  - override /model: sslgan.yaml
  - override /data: physionet.yaml
  - override /trainer: cpu.yaml
  - override /callbacks: 
    - generation_callback.yaml
    - model_checkpoint.yaml
  - override /logger: tensorboard.yaml

task: debug
seed: 42
data:
  _target_: src.datamodules.physionet_dataset.PhysioNet2012DataModule
  raw_file_path: data/physionet/physionet_2012.pkl
  ratio_missing: 0.1
  batch_size: 128
  val_ratio: 0.2
  test_ratio: 0.2
  num_workers: 4
  normalize: true
model:
  generator:
    _target_: src.sslgan.components.generator.Generator
    _partial_: true
    rnn_hid_size: 64
    label_weight: 1.0
    impute_weight: 0.3
    input_size: null # updated in the lightningmodule
    dropout_rate: 0.5
  discriminator:
    _target_: src.sslgan.components.discriminator.Discriminator
    _partial_: true
    rnn_hid_size: 64
    label_weight: 1.0
    impute_weight: 0.3
    input_size: ${model.generator.input_size}
    reminder_rate: 0.8
    dropout_rate: 0.5
  classifier:
    _target_: src.sslgan.components.classifier.Classifier
    _partial_: true
    rnn_hid_size: 64
    label_weight: 1.0
    impute_weight: 0.3
    input_size: ${model.generator.input_size}
  lightningmodule:
    _target_: src.sslgan.lightningmodule.SSLGAN
    generator: ${model.generator}
    discriminator: ${model.discriminator}
    classifier: ${model.classifier}
    pretrain_clf_n_epochs: 5
    clf_lr: 0.0001
    gen_lr: 0.0001
    disc_lr: 0.0001
    alpha: 5
    beta: 5
trainer:
  _target_: lightning.pytorch.Trainer
  accelerator: cpu
  max_epochs: 30
  deterministic: true
  devices: 4
  num_nodes: 1
  strategy: 
    _target_: lightning.pytorch.strategies.DDPStrategy
    find_unused_parameters: true
callbacks:
  generation_callback:
    _target_: src.callbacks.generation.GenerationCallback
    log_dir: ${paths.output_dir}
  model_checkpoint:
    _target_: lightning.pytorch.callbacks.ModelCheckpoint
    monitor: val/imputation_RMSE
    mode: min
    save_top_k: 1
    dirpath: ${paths.output_dir}
    filename: '{epoch}-{val_mae:.2f}'
    verbose: false
    save_last: false
    save_weights_only: false
    auto_insert_metric_name: true
    every_n_epochs: 1
paths:
  root_dir: .
  data_dir: ${paths.root_dir}/data/
  log_dir: ${paths.root_dir}/logs/
  output_dir: ${hydra:runtime.output_dir}
  work_dir: ${hydra:runtime.cwd}
logger:
  tensorboard:
    _target_: lightning.pytorch.loggers.tensorboard.TensorBoardLogger
    save_dir: ${paths.output_dir}
    name: tensorboard
